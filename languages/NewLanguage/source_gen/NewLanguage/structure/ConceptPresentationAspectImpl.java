package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_EXP;
  private ConceptPresentation props_IfElseStat;
  private ConceptPresentation props_Program;
  private ConceptPresentation props_STATEMENT;
  private ConceptPresentation props_add;
  private ConceptPresentation props_natcon;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.EXP:
        if (props_EXP == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_EXP = cpb.create();
        }
        return props_EXP;
      case LanguageConceptSwitch.IfElseStat:
        if (props_IfElseStat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IfElseStat");
          props_IfElseStat = cpb.create();
        }
        return props_IfElseStat;
      case LanguageConceptSwitch.Program:
        if (props_Program == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Program");
          props_Program = cpb.create();
        }
        return props_Program;
      case LanguageConceptSwitch.STATEMENT:
        if (props_STATEMENT == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_STATEMENT = cpb.create();
        }
        return props_STATEMENT;
      case LanguageConceptSwitch.add:
        if (props_add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("add");
          props_add = cpb.create();
        }
        return props_add;
      case LanguageConceptSwitch.natcon:
        if (props_natcon == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("natcon");
          props_natcon = cpb.create();
        }
        return props_natcon;
    }
    return null;
  }
}
