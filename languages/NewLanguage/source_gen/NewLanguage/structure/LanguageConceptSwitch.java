package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int EXP = 0;
  public static final int IfElseStat = 1;
  public static final int Program = 2;
  public static final int STATEMENT = 3;
  public static final int add = 4;
  public static final int natcon = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xd73f8878631742a1L, 0x939f6ad639e79df8L);
    builder.put(0x61b6f4f4c3b48cb6L, EXP);
    builder.put(0x61b6f4f4c3b4f0ceL, IfElseStat);
    builder.put(0x61b6f4f4c3b4e4aeL, Program);
    builder.put(0x61b6f4f4c3b4f0d3L, STATEMENT);
    builder.put(0x61b6f4f4c3b48cbfL, add);
    builder.put(0x61b6f4f4c3b4eccaL, natcon);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
